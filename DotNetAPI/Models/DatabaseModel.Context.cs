//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DotNetAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBConn : DbContext
    {
        public DBConn()
            : base("name=DBConn")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ADMIN> ADMINs { get; set; }
        public virtual DbSet<ARTIST> ARTISTs { get; set; }
        public virtual DbSet<ARTIST_REVIEW> ARTIST_REVIEWs { get; set; }
        public virtual DbSet<ARTIST_TYPE> ARTIST_TYPEs { get; set; }
        public virtual DbSet<BOOKING> BOOKINGs { get; set; }
        public virtual DbSet<CHILD_EVENT> CHILD_EVENTs { get; set; }
        public virtual DbSet<CONTRACT> CONTRACTS { get; set; }
        public virtual DbSet<CUSTOMER> CUSTOMERs { get; set; }
        public virtual DbSet<EVENT_REVIEW> EVENT_REVIEW { get; set; }
        public virtual DbSet<GUEST_BOOKING> GUEST_BOOKING { get; set; }
        public virtual DbSet<ORDER> ORDERS { get; set; }
        public virtual DbSet<PARENT_EVENT> PARENT_EVENTs { get; set; }
        public virtual DbSet<SOCIAL_MEDIA> SOCIAL_MEDIAs { get; set; }
        public virtual DbSet<TICKET> TICKETs { get; set; }
        public virtual DbSet<VENUE> VENUEs { get; set; }
        public virtual DbSet<VENUE_REVIEW> VENUE_REVIEWs { get; set; }

        public virtual int COMPAREPASSWORDS(Nullable<decimal> cUSTOMERID, string cUSTOMERPASSWORD)
        {
            var cUSTOMERIDParameter = cUSTOMERID.HasValue ?
                new ObjectParameter("CUSTOMERID", cUSTOMERID) :
                new ObjectParameter("CUSTOMERID", typeof(decimal));

            var cUSTOMERPASSWORDParameter = cUSTOMERPASSWORD != null ?
                new ObjectParameter("CUSTOMERPASSWORD", cUSTOMERPASSWORD) :
                new ObjectParameter("CUSTOMERPASSWORD", typeof(string));
            ObjectParameter n = new ObjectParameter("DOESMATCH", typeof(int));

            ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("COMPAREPASSWORDS", cUSTOMERIDParameter, cUSTOMERPASSWORDParameter, n);

            return Convert.ToInt32(n.Value);
        }
    }
}
